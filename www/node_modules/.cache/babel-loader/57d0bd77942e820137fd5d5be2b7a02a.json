{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vladi\\\\Downloads\\\\todoApp\\\\www\\\\src\\\\TodoListPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Form } from './components/form';\nimport { Display } from './components/display';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TodoListPage = () => {\n  _s();\n\n  const [item, setItem] = useState([]);\n  const [addItem, setAddItem] = useState('');\n  useEffect(() => {\n    fetch('/api').then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(data => setItem(data));\n  }, []);\n\n  const handleFormChange = inputValue => {\n    setAddItem(inputValue);\n  };\n\n  const handleFormSubmit = () => {\n    fetch('/api/new', {\n      method: 'POST',\n      body: JSON.stringify({\n        content: addItem\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(response => response.json()).then(message => console.log(message));\n    setAddItem('');\n    getLatestItems();\n  };\n\n  const getLatestItems = () => {\n    fetch('/api').then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(data => setItem(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      userInput: addItem,\n      onFormChange: handleFormChange,\n      onFormSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      itemList: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodoListPage, \"MXo5yopU/3UoxMR3xQrvn4jXDfQ=\");\n\n_c = TodoListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListPage\");","map":{"version":3,"sources":["C:/Users/vladi/Downloads/todoApp/www/src/TodoListPage.js"],"names":["React","useState","useEffect","Form","Display","TodoListPage","item","setItem","addItem","setAddItem","fetch","then","response","ok","json","data","handleFormChange","inputValue","handleFormSubmit","method","body","JSON","stringify","content","headers","message","console","log","getLatestItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,OAAT,QAAwB,sBAAxB;;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAE9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CAAC,MAAD,CAAL,CAAcC,IAAd,CAAmBC,QAAQ,IAAI;AAC3B,UAAGA,QAAQ,CAACC,EAAZ,EAAe;AACX,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;AACJ,KAJD,EAIGH,IAJH,CAIQI,IAAI,IAAIR,OAAO,CAACQ,IAAD,CAJvB;AAKH,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,gBAAgB,GAAIC,UAAD,IAAgB;AACrCR,IAAAA,UAAU,CAACQ,UAAD,CAAV;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BR,IAAAA,KAAK,CAAC,UAAD,EAAa;AACdS,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,OAAO,EAAEf;AADQ,OAAf,CAFQ;AAKdgB,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AALK,KAAb,CAAL,CAQGb,IARH,CAQQC,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EARpB,EAQqCH,IARrC,CAQ0Cc,OAAO,IAAIC,OAAO,CAACC,GAAR,CAAYF,OAAZ,CARrD;AASAhB,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAmB,IAAAA,cAAc;AACjB,GAZD;;AAcA,QAAMA,cAAc,GAAG,MAAM;AACzBlB,IAAAA,KAAK,CAAC,MAAD,CAAL,CAAcC,IAAd,CAAmBC,QAAQ,IAAI;AAC3B,UAAGA,QAAQ,CAACC,EAAZ,EAAe;AACX,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;AACJ,KAJD,EAIGH,IAJH,CAIQI,IAAI,IAAIR,OAAO,CAACQ,IAAD,CAJvB;AAKH,GAND;;AAQA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEP,OAAjB;AAA0B,MAAA,YAAY,EAAEQ,gBAAxC;AAA0D,MAAA,YAAY,EAAEE;AAAxE;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAEZ;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CA7CM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form } from './components/form';\r\nimport { Display } from './components/display';\r\n\r\nexport const TodoListPage = () => {\r\n\r\n    const [item, setItem] = useState([])\r\n    const [addItem, setAddItem] = useState('')\r\n\r\n    useEffect(() => {\r\n        fetch('/api').then(response => {\r\n            if(response.ok){\r\n                return response.json()\r\n            }\r\n        }).then(data => setItem(data))\r\n    }, [])\r\n\r\n    const handleFormChange = (inputValue) => {\r\n        setAddItem(inputValue)\r\n    }\r\n\r\n    const handleFormSubmit = () => {\r\n        fetch('/api/new', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                content: addItem\r\n            }),\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        }).then(response => response.json()).then(message => console.log(message))\r\n        setAddItem('')\r\n        getLatestItems()\r\n    }\r\n\r\n    const getLatestItems = () => {\r\n        fetch('/api').then(response => {\r\n            if(response.ok){\r\n                return response.json()\r\n            }\r\n        }).then(data => setItem(data))\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Form userInput={addItem} onFormChange={handleFormChange} onFormSubmit={handleFormSubmit}/>\r\n            <Display itemList={item} />\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}