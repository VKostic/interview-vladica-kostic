{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vladi\\\\Downloads\\\\todoApp\\\\www\\\\src\\\\View.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const View = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [item, setItem] = useState([]);\n  const [addItem, setAddItem] = useState('');\n  useEffect(() => {\n    fetch(`/api/${id}`).then(response => response.json()).then(data => setItem(data));\n  }, [id]);\n\n  const handleChange = event => {\n    setAddItem(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    if (addItem !== \"\") {\n      fetch(`/api/edit/${id}`, {\n        method: 'POST',\n        body: JSON.stringify({\n          id: id,\n          content: addItem\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(response => response.json()).then(message => console.log(message));\n      navigate('/');\n    } else {\n      navigate('/error');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field col s6\",\n        children: [item.length > 0 && item.map(data => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"validate\",\n          required: true,\n          defaultValue: data.content,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 58\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn waves-effect waves-light\",\n          type: \"submit\",\n          onClick: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons right\",\n            children: \"send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 107\n          }, this), \"Edit\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col s5 offset-s5\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Back to Todo list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(View, \"7gtccr9LIuYpuESHweLuHFUQ9Fs=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = View;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["C:/Users/vladi/Downloads/todoApp/www/src/View.js"],"names":["React","useState","useEffect","useParams","Link","useNavigate","View","navigate","id","item","setItem","addItem","setAddItem","fetch","then","response","json","data","handleChange","event","target","value","handleSubmit","method","body","JSON","stringify","content","headers","message","console","log","length","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\r\n\r\nexport const View = () => {\r\n    const navigate = useNavigate()\r\n    const { id } = useParams()\r\n    const [item, setItem] = useState([])\r\n    const [addItem, setAddItem] = useState('')\r\n\r\n    useEffect (() => {\r\n        fetch(`/api/${id}`)\r\n        .then(response => response.json())\r\n        .then(data => setItem(data))\r\n    }, [id])\r\n\r\n    const handleChange = (event) => {\r\n        setAddItem(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        if (addItem !== \"\"){\r\n        fetch(`/api/edit/${id}`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                id: id,\r\n                content: addItem\r\n            }),\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        }).then(response => response.json()).then(message => console.log(message))\r\n        navigate('/')\r\n    }\r\n    else {\r\n        navigate('/error')\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"input-field col s6\">\r\n                    {item.length > 0 && item.map(data => <input type='text' className=\"validate\" required defaultValue= {data.content} onChange={handleChange} />)}\r\n                    <button className=\"btn waves-effect waves-light\" type='submit' onClick={handleSubmit}><i className=\"material-icons right\">send</i>Edit</button>\r\n                </div>\r\n                <div className=\"col s5 offset-s5\"><Link to='/'>Back to Todo list</Link></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}